<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="typescript_statement" id="DqJ]OZOV=(r4TBVy!_=J" disabled-reasons="ORPHANED_BLOCK,MANUALLY_DISABLED" x="108" y="-53"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace kuangRobot {" line1="" line2="    //% block" line3="    //% value.min=0 value.max=127" line4="    //% value.defl=18" line5="    //% block=&quot;Initiate the line sensor at I2C address %value&quot;" line6="    export function startLineSensor(value: number): void {" line7="        pins.i2cWriteNumber(value, 48, NumberFormat.Int8LE, false)" line8="    }" line9="" line10="    //% block" line11="    //% value.min=0 value.max=127" line12="    //% value.defl=18" line13="    //% block=&quot;Read line sensor for LEFT motor at I2C address %value&quot;" line14="    export function readLineLeft(value: number): number {" line15="        basic.pause(1)" line16="        let sensor_value = pins.i2cReadNumber(value, NumberFormat.Int8LE, false)" line17="        if (sensor_value &lt;= -2) {" line18="            return 1023" line19="        } else {" line20="            return Math.map(sensor_value, 0, 128, 1023, 0)" line21="        }" line22="    }" line23="" line24="    //% block" line25="    //% value.min=0 value.max=127" line26="    //% value.defl=18" line27="    //% block=&quot;Read line sensor for RIGHT motor at I2C address %value&quot;" line28="    export function readLineRight(value: number): number {" line29="        basic.pause(1)" line30="        let sensor_value2 = pins.i2cReadNumber(value, NumberFormat.Int8LE, false)" line31="        if (sensor_value2 &lt;= -2) {" line32="            return Math.map(sensor_value2, -128, -2, 1023, 0)" line33="        } else {" line34="            return 1023" line35="        }" line36="    }" line37="" line38="    //% block=&quot;Set line-following speed: left %left_speed right %right_speed&quot;" line39="    //% left_speed.min=0 left_speed.max=1023" line40="    //% right_speed.min=0 right_speed.max=1023" line41="    export function setLineFollowingSpeed(left_speed: number, right_speed: number): void {" line42="        pins.analogWritePin(AnalogPin.P12, 0)" line43="        pins.analogWritePin(AnalogPin.P13, left_speed)" line44="        pins.analogWritePin(AnalogPin.P14, 0)" line45="        pins.analogWritePin(AnalogPin.P15, right_speed)" line46="    }" line47="" line48="    //% block=&quot;Stop robot&quot;" line49="    export function robotStop(): void {" line50="        pins.analogWritePin(AnalogPin.P12, 0)" line51="        pins.analogWritePin(AnalogPin.P13, 0)" line52="        pins.analogWritePin(AnalogPin.P14, 0)" line53="        pins.analogWritePin(AnalogPin.P15, 0)" line54="    }" line55="" line56="    //% block" line57="    //% value.min=0 value.max=1023" line58="    //% value2.min=0 value2.max=1023" line59="    //% value.defl=512" line60="    //% value2.defl=512" line61="    //% blockId=&quot;KuangRobot_move&quot; block=&quot;Drive motor at left %value and right %value2&quot;" line62="    export function moveRobot(value: number, value2: number): void {" line63="        let leftPWM = Math.map(value, 0, 1023, 0, 1023)" line64="        let rightPWM = Math.map(value2, 0, 1023, 0, 1023)" line65="        pins.analogWritePin(AnalogPin.P13, leftPWM)" line66="        pins.analogWritePin(AnalogPin.P15, rightPWM)" line67="    }" line68="}" numlines="69"></mutation></block></xml>